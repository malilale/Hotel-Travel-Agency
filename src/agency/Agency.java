package agency;


import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Muhammed Ali LALE
 */
public class Agency extends javax.swing.JFrame {
        
        private ArrayList<Travel> travelList;
        private ArrayList<Hotel> hotelList;
        
        private JTable hotelTable ;
        private JTable ticketTable;
        private JTable userTable;
        private JTable detail;
        
        
        
        private boolean isTicket;
        private Color actColor = new Color(187,187,187);
        
        Operations op;
    
     
    public Agency() {
        op = new Operations();
        
        
        
        initComponents();
        initTables();
        fillComponents();
        hotelButton.setBackground(Color.gray);
        isTicket = true;
    }
    
    public void listInject(){
        java.awt.EventQueue.invokeLater(() -> {
                new Agency().setVisible(true);
            });
    }
    
    //create tables
    public void initTables(){
        ticketTable = new JTable();
        ticketTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ticketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Firma Adı", "Kalkış Yeri", "Varış Yeri", "Tarih", "Saat", "Fiyat", "Koltuk Sayısı"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        ticketTable.setRowHeight(25);

        hotelTable = new JTable();
        hotelTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hotelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Otel Adı", "Bölge", "Başlangıç Tarihi", "Bitiş Tarihi", "Fiyat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class,java.lang.String.class,java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        hotelTable.setRowHeight(25);
      
               
        ScrollPane.setViewportView(ticketTable);    
       
    }
   
    private void fillComponents() {
        String[] firms = op.getFirms().toArray(new String[0]);
        selectFirmBox.setModel(new javax.swing.DefaultComboBoxModel<>(firms));
        
        String[] places = op.getTravelPlaces().toArray(new String[0]);
        selectPlace1.setModel(new javax.swing.DefaultComboBoxModel<>(places));
        
        String[] destinations = op.getDestinations().toArray(new String[0]);
        selectPlace2.setModel(new javax.swing.DefaultComboBoxModel<>(destinations));
    }
    
  
    public void fillTable(JTable table){
     
        for(Travel t:travelList){
            getDefaultModel(table).addRow(new Object[]{t.getFirmName(),t.getPlace(),t.getDestination(),t.getDate().toString(),t.getTime(),Float.toString(t.getPrice()) });
        } 
   
    }
    
    public DefaultTableModel getDefaultModel(javax.swing.JTable table) {
        return (DefaultTableModel) table.getModel();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        message = new javax.swing.JLabel();
        tableTitle = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        ticketButton = new javax.swing.JButton();
        hotelButton = new javax.swing.JButton();
        selectFirmBox = new javax.swing.JComboBox<>();
        selectPlace1 = new javax.swing.JComboBox<>();
        selectPlace2 = new javax.swing.JComboBox<>();
        boxDay = new javax.swing.JComboBox<>();
        boxMonth = new javax.swing.JComboBox<>();
        filterButton = new javax.swing.JButton();
        payButton = new javax.swing.JButton();
        firmsButton = new javax.swing.JButton();
        addTravelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Çelebi Seyahat Acentası");
        setPreferredSize(new java.awt.Dimension(1200, 640));

        tableTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        tableTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableTitle.setText("BİLET AL");
        tableTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ticketButton.setText("Bilet Al");
        ticketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticketButtonActionPerformed(evt);
            }
        });

        hotelButton.setText("Otel Rezervasyonu");
        hotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelButtonActionPerformed(evt);
            }
        });

        selectFirmBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Firma Seçiniz" }));

        selectPlace1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kalkış Yeri" }));

        selectPlace2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Varış Yeri" }));

        boxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gün", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        boxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ay", "Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık" }));

        filterButton.setText("Seferleri Göster");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        payButton.setText("Ödeme Yap");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        firmsButton.setText("Firmaları Düzenle");
        firmsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firmsButtonActionPerformed(evt);
            }
        });

        addTravelButton.setText("Sefer Ekle");
        addTravelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTravelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(445, 445, 445)
                        .addComponent(tableTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(selectFirmBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectPlace1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectPlace2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxDay, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(firmsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTravelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 286, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ticketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))
                    .addComponent(hotelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(189, 189, 189))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ticketButton)
                    .addComponent(hotelButton))
                .addGap(31, 31, 31)
                .addComponent(tableTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectFirmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(selectPlace1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(selectPlace2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(firmsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addTravelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
    //Removes all the rows of tables
    public void clearTable(){
        while(getDefaultModel(hotelTable).getRowCount()>0){
            getDefaultModel(hotelTable).removeRow(0);
        }
        while(getDefaultModel(ticketTable).getRowCount()>0){
            getDefaultModel(ticketTable).removeRow(0);
        }
    }
    
  
    
   //Gives the List on the screen
    private ArrayList getCurrentList(){
        if(isTicket)
            return travelList;
        else
            return hotelList;
    }
    
    //Gives the table on the screen
    private JTable getCurrentTable(){
        if(isTicket)
            return ticketTable;
        else
            return hotelTable;
    }
    
    //Puts message on the message label
    public void putMessage(Color renk, String msg){
        message.setForeground(renk);
        message.setText(msg);
    }
    
    //Returns the selected item ad the current row
    private Object getSelectedItem(){
        int selectedIndex;
        selectedIndex = getCurrentTable().getSelectedRow();
        return getCurrentList().get(selectedIndex);
    }
    
    
   
   
    private void ticketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticketButtonActionPerformed
        ticketButton.setBackground(actColor);
        hotelButton.setBackground(Color.gray);
        ScrollPane.setViewportView(ticketTable);
        tableTitle.setText("BİLET AL");
        selectFirmBox.setVisible(true);
        selectPlace2.setVisible(true);
        addTravelButton.setVisible(true);
        isTicket = true;
        filterButton.setText("Seferleri Göster");
        String[] places = op.getTravelPlaces().toArray(new String[0]);
        selectPlace1.setModel(new javax.swing.DefaultComboBoxModel<>(places));
    }//GEN-LAST:event_ticketButtonActionPerformed

    private void hotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelButtonActionPerformed
        hotelButton.setBackground(actColor);
        ticketButton.setBackground(Color.gray);
        ScrollPane.setViewportView(hotelTable);
        selectFirmBox.setVisible(false);
        selectPlace2.setVisible(false);
        addTravelButton.setVisible(false);
        isTicket = false;
        tableTitle.setText("OTEL REZERVASYONU");
        filterButton.setText("Otelleri Göster");
        String[] places = op.getHotelPlaces().toArray(new String[0]);
        selectPlace1.setModel(new javax.swing.DefaultComboBoxModel<>(places));
    }//GEN-LAST:event_hotelButtonActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        if(selectPlace1.getSelectedIndex()==0 || boxDay.getSelectedIndex()==0
                || boxMonth.getSelectedIndex()==0){
            putMessage(Color.red,"Lütfen tüm seçimleri yapınız");
            return;
        }else if(isTicket && (selectFirmBox.getSelectedIndex()==0 || selectPlace2.getSelectedIndex()==0 )){
            putMessage(Color.red,"Lütfen tüm seçimleri yapınız");
            return;
        }else
            putMessage(actColor, "");
         
        String place = selectPlace1.getSelectedItem().toString();
        
        int day = boxDay.getSelectedIndex();
        int month = boxMonth.getSelectedIndex();
        
       String date = "2023-"+month+"-"+day;
        clearTable();
        if(isTicket){
            String firm =  selectFirmBox.getSelectedItem().toString();
            String destination = selectPlace2.getSelectedItem().toString();
            travelList = op.getTravels(firm, place, destination,date);
        
            for(Travel t:travelList){
                getDefaultModel(ticketTable).addRow(new Object[]{t.getFirmName(),t.getPlace(),t.getDestination(),t.getDate().toString(),t.getTime(),Float.toString(t.getPrice()), Integer.toString(t.getSeats()) });
            } 
        }else{
            hotelList = op.getHotels(place, date);
        
            for(Hotel h: hotelList){
                getDefaultModel(hotelTable).addRow(new Object[]{h.getHotelName(),h.getRegion(),h.getFirstDate(),h.getLastDate(),Float.toString(h.getPrice()) });
            } 
        }
    }//GEN-LAST:event_filterButtonActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        int selectedIndex = getCurrentTable().getSelectedRow(); 
        if(selectedIndex ==-1){
            putMessage(Color.red, "Seçim yapınız");
            return;
        }
        if(isTicket){
            Travel ticket = (Travel)getSelectedItem();
            if(ticket.getSeats()==0){
                putMessage(Color.red, "Koltuklar Tükenmiştir");
                return;
            }
            Float point = op.getPoint(ticket.getFirmName());
            Payment payment = new Payment(ticket,point);
            payment.setVisible(true);
        }else{
            Hotel hotel = (Hotel)getSelectedItem();
            Payment payment = new Payment(hotel.getHotelName(),hotel.getPrice(),hotel.getPoints());
            payment.setVisible(true);
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void firmsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firmsButtonActionPerformed
        AddFirms addFirms = new AddFirms();
        addFirms.setVisible(true);
    }//GEN-LAST:event_firmsButtonActionPerformed

    private void addTravelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTravelButtonActionPerformed
        AddTravel addTravel = new AddTravel();
        addTravel.setVisible(true);
    }//GEN-LAST:event_addTravelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agency.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agency().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton addTravelButton;
    private javax.swing.JComboBox<String> boxDay;
    private javax.swing.JComboBox<String> boxMonth;
    private javax.swing.JButton filterButton;
    private javax.swing.JButton firmsButton;
    private javax.swing.JButton hotelButton;
    private javax.swing.JLabel message;
    private javax.swing.JButton payButton;
    private javax.swing.JComboBox<String> selectFirmBox;
    private javax.swing.JComboBox<String> selectPlace1;
    private javax.swing.JComboBox<String> selectPlace2;
    private javax.swing.JLabel tableTitle;
    private javax.swing.JButton ticketButton;
    // End of variables declaration//GEN-END:variables

    
}
